package homework.naivebayes;


import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;

public class Document { //Representation of a feature document, created in order to take trace of number of words and to check if certain word is contained in the document

    public int ID;
    public String words;
    private String category;
    public String[] listOfWords;
    private HashMap<String, Integer> myHash = new HashMap<>();

    private int totalNoOfWords;

    public Document(int ID, String words) {
        this.words = words;
        this.ID = ID;

        listOfWords = words.split("[\\s+]");
        totalNoOfWords = listOfWords.length;

        //Counts the words and signs their occurrencies on the Map O(n)
        for (int i = 0; i < listOfWords.length; i++) {
            String word = listOfWords[i];
            if (word.contains("http://") || word.contains("https://")) {
                String[] inner;
                if (word.contains("http://")) {
                    inner = word.substring("http://".length()).split("/");
                } else {
                    inner = word.substring("https://".length()).split("/");
                }
                for (int j = 0; j < inner.length; j++) {
                    if (myHash.get(inner[j]) == null) {
                        myHash.put(inner[j], 1);
                    } else {
                        int tmpCount = myHash.get(inner[j]);
                        tmpCount++;
                        myHash.put(inner[j], tmpCount);
                    }
                }
            } else {
                if (myHash.get(listOfWords[i]) == null) {
                    myHash.put(listOfWords[i], 1);
                } else {
                    int tmpCount = myHash.get(listOfWords[i]);
                    tmpCount++;
                    myHash.put(listOfWords[i], tmpCount);
                }
            }
        }

    }

    public int getTotalNoOfWords() {
        return totalNoOfWords;
    }

    public void setCategory(String category) {
        this.category = category;
    }

    public String getCategory() {
        return category;
    }

    public boolean isPresent(String word) {
        if(myHash.containsKey(word)){
            return true;
        }
        return false;
    }

    public boolean equals(Object o) {
        if (o.getClass() == Document.class) {
            Document d = (Document) o;
            return this.ID == d.ID;
        }
        return false;
    }
}
